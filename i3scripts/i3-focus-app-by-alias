#!/bin/bash
#
# i3-focus-app-by-alias
#

#
# - Please personalise the "my-apps" table in the myscripts folder.
# 
# - value - The command that launches the application.
# - [key] - The command alias, length 2, NaN.
#
# - Note the absence of commas in the syntax of bash arrays.
#
declare -A apps=( \
		  INSERT_MY_APPS_HERE
)   

#
# Focus an instance of an app given its command alias, launching the
# instance as necessary.
#
focus ()
{
    case "$1" in
	(e0)
	   emacsserver restart
	   ;;
    esac
    case "$1" in
	([a-z][0-9]|[a-z][a-z])
	    status=$(i3-msg "[workspace=\"$1\" con_mark=\"_$1\"] focus")
	    case "${status}" in
		(*true*)
		    i3-msg "workspace --no-auto-back-and-forth \"$1\""
		    ;;
		(*false*)
		    i3-msg "workspace --no-auto-back-and-forth \"$1\""
		    # The enhanced PATH is exported by the dispatcher.
		    (eval  ${apps["$1"]})&
		    # Allow the app enough time to initialise before applying
		    # the mark. The underscore makes the mark invisible; to
		    # confirm the mark. Use "i3-msg -t get_marks".
		    sleep 3
		    i3-msg "[workspace=\"$1\"]  mark --add  --replace _$1"
		    ;;
	    esac
	    ;;
    esac
}

#
# start|stop|restart the server for emacs clients.
#
emacsserver ()
{
    case "$1" in
	(start|restart)
	    delay=${2:-3}
	    if [ $(pgrep  -c -f 'emacs -rv --daemon') -eq 0 ]; then
		(emacs -rv --daemon) &
		# Ensure enogh time for the server to have started.
		sleep $delay
	    fi
	    ;;
	(stop) 
	    pkill -f 'emacs -rv --daemon'
	    ;;
    esac
}

#
# Start here.
#

eval "$@"

#
# Done
#
