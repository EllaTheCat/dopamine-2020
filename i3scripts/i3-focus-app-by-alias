#!/bin/bash
#
# i3-focus-app-by-alias
#

#
# The dictionary "wsapps" should only contain entries for apps that
# have dedicated workspaces, whereas "not_wsapps" is for adding an
# emacs frame or web/file browser tab/window to "wsapps" windows.
#

###INSERT_APPS00_HERE###

#
# Focus an instance of an app given its command alias, launching the
# instance as necessary.
#
focus ()
{
    case "$1" in
        ([e][0-9])
            if [ "$(pgrep -c -f "emacs --daemon -rv")" -eq 0 ]; then
                (emacs --daemon -rv) &
                sleep 3
            fi
        ;;
    esac
    case "$1" in
	([a-z][0-9]|[a-z][a-z])
            # shellcheck disable=SC2154
            app=${wsapps[$1]}
            if [ "_${app}" = "_" ]; then
                # [1] Program $1 is not assigned to a workspace in
                # wwsapps[]. Cross-check any i3 assign directves!
                ws="$(i3-msg -t get_workspaces | jq '.[] | .name'| grep "$1")"
                if [ "_${ws}" = "_" ]; then
                    # [1A] Workspace $1 does not exist. $1 is allowed
                    # to specify a program to launch in the current
                    # workspace, see not_wsapps[].
                    #
                    # shellcheck disable=SC2154
                    app=${not_wsapps[$1]}
                    if [ "_${app}" != "_" ]; then
                        # Similar lines to these are commented below.
                        arg0=${app%% *}
                        path=$(command -v  "${arg0}")    # "which"
                        path=${path/${arg0}/}
                        i3-msg "exec --no-startup-id ${path}${app}"
                    fi
                else
                    # [1B] Workspace $1 exists, focus it. Programs
                    # running there have no other association with it.
                    i3-msg "workspace --no-auto-back-and-forth \"$1\""
                fi
            else
	        status=$(i3-msg "[workspace=\"$1\" con_mark=\"${1:0:2}\"] focus")
	        case "${status}" in
		    (*true*)
		        i3-msg "workspace --no-auto-back-and-forth \"$1\""
                        ;;
		    (*false*)
                        # "No window matches given criteria" is not an
                        # error here, it's one of two desired outcomes.
		        i3-msg "workspace --no-auto-back-and-forth \"$1\""
                        # Getting this to work was fun!
                        # We want the script to terminate hence using i3-msg.
		        # The enhanced PATH is exported by the dispatcher.
                        # The i3-msg recipient can't see the enhanced PATH.
                        # Extract and prepend the path directory components.

                        # The executable name remains after removing the
                        # "longest matching suffix", defined by space star.
                        arg0=${app%% *}
                        # Get the full path to the executable, remove the
                        # name part, prepend the rest to the command.
                        path=$(command -v  "${arg0}")    # "which"
                        path=${path/${arg0}/}
                        i3-msg "exec --no-startup-id ${path}${app}"
		        ;;
	        esac
            fi
            ;;
    esac
}


#
# Start here.
#

# focus $2 ...
"${@}"

#
# Done
#
