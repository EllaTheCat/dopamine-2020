#!/bin/bash
#
# These programs should run continuously for a session.
# Delegating to a bash script is easier than "scripting" in i3 config.
# $1 start | stop | restart | status ...
# $2 informal program name.
#

case "$1" in
    (start)
        case "$2" in
            (compton)
                compton -b --config "${HOME}/.config/compton.conf"
                ;;
            (dunst)
                (xfce4-terminal -T "$(date +%T) dunst" \
                                -x dunst -config "${HOME}/.config/dunst/dunstrc") &
                ;;
            (marks)
                (xfce4-terminal -T "$(date +%T) marks" \
                                -x "${HOME}/local/bin/i3-marks" update) &
                ;;
            (commands)
                (xfce4-terminal -T "$(date +%T) commands" \
                                -x "${HOME}/local/bin/i3-file-watcher" ) &
                ;;
        esac
        ;;
    (stop)
        case "$2" in
            (compton)
                # start|stop strings must be identical.
                pkill -f "compton -b --config ${HOME}/.config/compton.conf"
                ;;
            (dunst)
                # start|stop strings must be identical.
                pkill -f "dunst -config ${HOME}/.config/dunst/dunstrc"
                ;;
            (marks)
                # This kills everything shown in status.
                [ "$(pgrep -c -f i3-marks)" -gt 0 ] && killall i3-marks
                ;;
            (commands)
                #
                cmd="--watch-files /dev/shm/$USER/i3/command"
                exe="--on-modify-command /dev/shm/$USER/i3/execute"
                pkill -f "perl /usr/bin/inotify-hookable ${cmd} ${exe}"
                ;;
        esac
        ;;
    (restart)
        case "$2" in
            (compton|dunst|marks|commands)
                # Reusing stop|start and status cases facilitates testing.
                $0 stop "$2"
                sleep 2
                $0 start "$2"
                sleep 1
                $0 status "$2"
                ;;
        esac
        ;;
    (status)
        case "$2" in
            (compton|dunst)
                pgrep -a -f "$2" | grep -v grep | grep -v "$(basename "$0")"
                ;;
            (marks)
                # Expect 3 pids, contiguously numbered, but not shown
                # in order, when not stopped.
                pgrep -a -f 'i3-msg -t subscribe -m' | grep window
                pgrep -a -f 'i3-marks update'
                ;;
            (commands)
                # Expect 2 pids.
                pgrep -a -f '/usr/bin/inotify-hookable'
                pgrep -a -f 'i3-file-watcher'
                ;;
            (all)
                #
                for option in compton dunst marks commands; do
                    printf "%s:\n%s\n" ${option} "$($0 status $option)"
                done
                ;;
        esac
        ;;
esac

#
# Done,
#
